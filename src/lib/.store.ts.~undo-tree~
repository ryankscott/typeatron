(undo-tree-save-format-version . 1)
"b3fc1558a36d515e458f110ca97d489a7f064dff"
[nil nil nil nil (25454 432 146326 0) 0 nil]
([nil nil ((162 . 163) (t 25453 20539 848145 887000) 114) nil (25454 432 146324 0) 0 nil])
([nil nil ((166 . 184) (165 . 167) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:keyword)) . -165) (163 . 166)) nil (25454 432 146323 0) 0 nil])
([nil nil ((184 . 186) (#("'" 0 1 (fontified nil)) . -184) (184 . 185)) nil (25454 432 146321 0) 0 nil])
([nil nil ((#("!" 0 1 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:operator))) . -180) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -181) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -182) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#(" " 0 1 (fontified t)) . -183) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("'" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -184) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("'" 0 1 (fontified t face tree-sitter-hl-face:string)) . 185) (undo-tree-id238 . 1)) nil (25454 432 146319 0) 0 nil])
([nil nil ((180 . 185)) nil (25454 432 146308 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . -184) (undo-tree-id227 . -1) 185) nil (25454 432 146307 0) 0 nil])
([nil nil ((184 . 186) (#("'" 0 1 (fontified nil)) . -184) (184 . 185)) nil (25454 432 146305 0) 0 nil])
([nil nil ((185 . 194)) nil (25454 432 146304 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -189) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:string)) . -190) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -191) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -192) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -193) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 194) nil (25454 432 146294 0) 0 nil])
([nil nil ((189 . 194)) nil (25454 432 146040 0) 0 nil])
([nil nil ((196 . 204)) nil (25454 432 146035 0) 0 nil])
([nil nil ((#("if(typeof window === 'undefined') return;
" 0 2 (fontified t face tree-sitter-hl-face:keyword) 2 3 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 3 9 (fontified t face tree-sitter-hl-face:keyword) 9 10 (fontified t) 10 16 (fontified t face tree-sitter-hl-face:variable\.builtin) 16 17 (fontified t) 17 20 (fontified t face tree-sitter-hl-face:operator) 20 21 (fontified t) 21 31 (fontified t face tree-sitter-hl-face:string) 31 32 (fontified t face tree-sitter-hl-face:string) 32 33 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 33 34 (fontified t) 34 40 (fontified t face tree-sitter-hl-face:keyword) 40 41 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 41 42 (fontified t)) . 163) (undo-tree-id239 . -38) (undo-tree-id240 . 10) (undo-tree-id241 . -26) (undo-tree-id242 . -26) (undo-tree-id243 . -26) (undo-tree-id244 . -26) (undo-tree-id245 . -26) (undo-tree-id246 . -26) (undo-tree-id247 . -26) (undo-tree-id248 . -26) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -26) (undo-tree-id254 . -26) (undo-tree-id255 . -26) (undo-tree-id256 . -26) (undo-tree-id257 . -26) (undo-tree-id258 . -26) (undo-tree-id259 . -26) (undo-tree-id260 . -26) (undo-tree-id261 . -26) (undo-tree-id262 . -26) (undo-tree-id263 . -26) (undo-tree-id264 . -26) (undo-tree-id265 . -26) (undo-tree-id266 . -26) (undo-tree-id267 . -26) (undo-tree-id268 . -26) (undo-tree-id269 . -26) (undo-tree-id270 . -26) (undo-tree-id271 . -26) (undo-tree-id272 . -26) (undo-tree-id273 . -26) (undo-tree-id274 . -26) (undo-tree-id275 . -26) (undo-tree-id276 . -26) (undo-tree-id277 . -26) (undo-tree-id278 . -26) (undo-tree-id279 . -26) (undo-tree-id280 . -26) (undo-tree-id281 . -26) (undo-tree-id282 . -26) (undo-tree-id283 . -26) (undo-tree-id284 . -26) (undo-tree-id285 . -26) (undo-tree-id286 . -26) (undo-tree-id287 . -26) (undo-tree-id288 . -26) (undo-tree-id289 . -26) (undo-tree-id290 . -26) (undo-tree-id291 . -26) (undo-tree-id292 . -26) (undo-tree-id293 . -26) (undo-tree-id294 . -26) (undo-tree-id295 . -26) (undo-tree-id296 . -26) (undo-tree-id297 . -26) (undo-tree-id298 . -26) (undo-tree-id299 . -26) (undo-tree-id300 . -26) (undo-tree-id301 . -26) (undo-tree-id302 . -26) (undo-tree-id303 . -26) (undo-tree-id304 . -26) (undo-tree-id305 . -26) (undo-tree-id306 . -26) (undo-tree-id307 . -26) (undo-tree-id308 . -26) (undo-tree-id309 . -26) (undo-tree-id310 . -26) (undo-tree-id311 . -26) (undo-tree-id312 . -26) (undo-tree-id313 . -26) (undo-tree-id314 . -26) (undo-tree-id315 . -26) (undo-tree-id316 . -26) (undo-tree-id317 . -26) (undo-tree-id318 . -26) (undo-tree-id319 . -26) (undo-tree-id320 . -26) (undo-tree-id321 . -26) (undo-tree-id322 . -26) (undo-tree-id323 . -26) (undo-tree-id324 . -26) (undo-tree-id325 . 1) (undo-tree-id326 . -38) (undo-tree-id327 . -34) (undo-tree-id328 . -40) (undo-tree-id329 . -38) (undo-tree-id330 . -38) (undo-tree-id331 . -38) (undo-tree-id332 . -38) (undo-tree-id333 . -38) (undo-tree-id334 . -38) (undo-tree-id335 . -38) (undo-tree-id336 . -38) (undo-tree-id337 . -38) (undo-tree-id338 . -38) (undo-tree-id339 . -38) (undo-tree-id340 . -38) (undo-tree-id341 . -38) (undo-tree-id342 . -38) (undo-tree-id343 . -38) (undo-tree-id344 . -38) (undo-tree-id345 . -38) (undo-tree-id346 . -38) (undo-tree-id347 . -38) (undo-tree-id348 . -38) (undo-tree-id349 . -38) (undo-tree-id350 . -38) (undo-tree-id351 . -38) (undo-tree-id352 . -38) (undo-tree-id353 . -38) (undo-tree-id354 . -38) (undo-tree-id355 . -38) (undo-tree-id356 . -38) (undo-tree-id357 . -38) (undo-tree-id358 . -38) (undo-tree-id359 . -38) (undo-tree-id360 . -38) (undo-tree-id361 . -38) (undo-tree-id362 . -38) (undo-tree-id363 . -38) (undo-tree-id364 . -38) (undo-tree-id365 . -38) (undo-tree-id366 . -38) (undo-tree-id367 . -38) (undo-tree-id368 . -38) (undo-tree-id369 . -38) (undo-tree-id370 . -38) (undo-tree-id371 . -38) (undo-tree-id372 . -38) (undo-tree-id373 . -38) (undo-tree-id374 . -38) (undo-tree-id375 . -38) (undo-tree-id376 . -38) (undo-tree-id377 . -42) (undo-tree-id378 . -38) (undo-tree-id379 . -38) (undo-tree-id380 . -38) (undo-tree-id381 . -38) (undo-tree-id382 . -38) (undo-tree-id383 . -38) (undo-tree-id384 . -38) (undo-tree-id385 . -38) (undo-tree-id386 . -38) (undo-tree-id387 . -38) (undo-tree-id388 . -38) (undo-tree-id389 . -38) (undo-tree-id390 . -38) (undo-tree-id391 . -38) (undo-tree-id392 . -38) (undo-tree-id393 . -38) (undo-tree-id394 . -38) (undo-tree-id395 . -38) (undo-tree-id396 . -38) (undo-tree-id397 . -38) (undo-tree-id398 . -38) (undo-tree-id399 . -38) (undo-tree-id400 . -38) (undo-tree-id401 . -38) (undo-tree-id402 . -38) (undo-tree-id403 . -38) 201 (t 25454 432 149914 463000)) nil (25454 440 482806 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 215 . 216) (#("
" 0 1 (fontified nil)) . -257) (215 . 258) 165) nil (25454 440 482604 0) 0 nil])
([nil nil ((#("if(typeof window === 'undefined') return;
" 0 2 (fontified t face tree-sitter-hl-face:keyword) 2 3 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 3 9 (fontified t face tree-sitter-hl-face:keyword) 9 10 (fontified t) 10 16 (fontified t face tree-sitter-hl-face:variable\.builtin) 16 17 (fontified t) 17 20 (fontified t face tree-sitter-hl-face:operator) 20 21 (fontified t) 21 31 (fontified t face tree-sitter-hl-face:string) 31 32 (fontified t face tree-sitter-hl-face:string) 32 33 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 33 34 (fontified t) 34 40 (fontified t face tree-sitter-hl-face:keyword) 40 41 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 41 42 (fontified t)) . 216) (undo-tree-id412 . -41) (t 25454 440 485716 399000)) nil (25454 469 638732 0) 0 nil])
([nil nil ((570 . 573)) nil (25454 469 638728 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -571) (undo-tree-id410 . -1) (#("&" 0 1 (fontified t)) . -572) (undo-tree-id411 . -1) 573) nil (25454 469 638726 0) 0 nil])
([nil nil ((571 . 581)) nil (25454 469 638719 0) 0 nil])
([nil nil ((581 . 591)) nil (25454 469 638717 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -588) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -589) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#(" " 0 1 (fontified t)) . -590) (undo-tree-id408 . -1) (undo-tree-id409 . -1) 591) nil (25454 469 638713 0) 0 nil])
([nil nil ((593 . 602) (592 . 594) (#("'" 0 1 (fontified nil)) . -592) (588 . 593)) nil (25454 469 638680 0) 0 nil])
([nil nil ((#("typeof " 0 6 (fontified t face tree-sitter-hl-face:keyword) 6 7 (fontified t)) . 574) (t 25454 469 642551 140000)) nil (25454 490 709555 0) 0 nil])
([nil nil ((41 . 42) (t 25454 490 712680 143000) 40) nil (25454 599 125970 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -86) (nil rear-nonsticky nil 101 . 102) (nil fontified nil 42 . 102) (42 . 102)) nil (25454 599 125968 0) 0 nil])
([nil nil ((#("if (browser) {
" 0 2 (fontified t face tree-sitter-hl-face:keyword) 2 3 (fontified t) 3 4 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 4 11 (fontified t) 11 12 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 12 13 (fontified t) 13 14 (fontified t rear-nonsticky t face tree-sitter-hl-face:punctuation\.bracket) 14 15 (fontified t)) . 87) (undo-tree-id435 . 1) (undo-tree-id436 . -13) (undo-tree-id437 . -13) (undo-tree-id438 . 2) (undo-tree-id439 . -14) 100) nil (25454 599 125967 0) 0 nil])
([nil nil ((573 . 576) 546) nil (25454 599 125961 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -574) (undo-tree-id434 . -2) 576) nil (25454 599 125959 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 574 . 575) (#("
" 0 1 (fontified nil)) . -589) (574 . 590)) nil (25454 599 125957 0) 0 nil])
([nil nil ((#("  if (typeof localStorage !== 'undefined' && window !== 'undefined') {
" 0 2 (fontified t) 2 4 (fontified t face tree-sitter-hl-face:keyword) 4 5 (fontified t) 5 6 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 6 12 (fontified t face tree-sitter-hl-face:keyword) 12 26 (fontified t) 26 29 (fontified t face tree-sitter-hl-face:operator) 29 30 (fontified t) 30 41 (fontified t face tree-sitter-hl-face:string) 41 42 (fontified t) 42 44 (fontified t face tree-sitter-hl-face:operator) 44 45 (fontified t) 45 51 (fontified t face tree-sitter-hl-face:variable\.builtin) 51 52 (fontified t) 52 55 (fontified t face tree-sitter-hl-face:operator) 55 56 (fontified t) 56 66 (fontified t face tree-sitter-hl-face:string) 66 67 (fontified t face tree-sitter-hl-face:string) 67 68 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 68 69 (fontified t) 69 70 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 70 71 (fontified t)) . 590) (undo-tree-id431 . 5) (undo-tree-id432 . -45) (undo-tree-id433 . -45)) nil (25454 599 125955 0) 0 nil])
([nil nil ((1136 . 1139) 1133) nil (25454 599 125951 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1137) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (1139 . 1140)) nil (25454 599 125946 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 738) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . 1) (undo-tree-id448 . -1) (t 25454 599 150369 869000)) nil (25454 614 21704 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 854) (t 25454 614 26037 935000)) nil (25454 621 870040 0) 0 nil])
([nil nil ((#("  }
" 0 2 (fontified t) 2 3 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 3 4 (fontified t)) . 1131) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . 2) (undo-tree-id458 . -3) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) 1133) nil (25454 621 870033 0) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 1 2 (fontified t)) . 1131) (undo-tree-id534 . 1) (undo-tree-id535 . 2) (undo-tree-id536 . -1) (t 25454 621 873821 35000)) nil (25454 623 138626 0) 0 nil])
([nil nil ((1130 . 1135) (t 25454 623 142157 65000) 1124) nil (25454 639 316864 0) 0 nil])
([nil nil ((1134 . 1135) (#("  " 0 2 (fontified nil)) . -1133) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (1135 . 1136)) nil (25454 639 316860 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1134) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) 1135) nil (25454 639 316815 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 574) (undo-tree-id660 . -1) (t 25454 639 322755 710000)) nil (25454 650 32224 0) 0 nil])
([nil nil ((1135 . 1138) (t 25454 650 36641 527000) 1134) nil (25454 679 820848 0) 0 nil])
([nil nil ((1138 . 1140) (#("{" 0 1 (fontified nil)) . -1138) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (1138 . 1139)) nil (25454 679 820847 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -1138) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (#("}" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 1139) (undo-tree-id888 . -1)) nil (25454 679 820840 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1136) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (1138 . 1139)) nil (25454 679 820759 0) 0 nil])
([nil current ((574 . 576) (738 . 739) (833 . 835) (855 . 857) (868 . 870) (891 . 893) (896 . 898) (945 . 947) (999 . 1001) (1012 . 1014) (1027 . 1029) (1069 . 1071) (1094 . 1096) (1116 . 1118) (1123 . 1125) (1132 . 1134) (1134 . 1136) (t 25454 679 825041 632000)) nil (25454 689 480142 0) 0 nil])
nil
